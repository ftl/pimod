# ***************************************************************************
# 
# PI-Mod V1.2.2 - DTD Module "attribute-ents.ent"
# 
# ********************************************************************************
# 
# DTD module declares attributes of PI-Mod DTD as parameter entities.
# 
# Public Identifier:
# 
#     "-//PI-MOD//ENTITIES Attribute Entities V1.2.2//EN"
# 
# Typical invocation:
# 
#	<!ENTITY % attribute-ents
#		PUBLIC "-//PI-MOD//ENTITIES Attribute Entities V1.2.2//EN"
#		"attribute-ents.ent"
#	>
#	%attribute-ents;
# 
# ********************************************************************************
# 
# Copyright (C) 2011, The PI-Mod Project
# 
# Contributors to the The PI-Mod Project (V1.2.2): 
#	 Wolfgang Ziegler 
#	 Stephan Steurer 
#	 Claudia Oberle
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
# 
# ********************************************************************************
# 
# Naming conventions for parameter entities:
# 
#	cmf.ELEMENTGROUP	content model fragment: collects similar 
#				elements in group ELEMENTGROUP
#	cm.ELEMENT		content model: complete content model of element
#				ELEMENT
#	att.ATTRIBUTE		attribute: declaration of single attribute
#				ATTRIBUTE (with Name Type Default)
#	attv.ATTRIBUTE		attribute value enumeration: enumeration of
#				predefined values for Attribute ATTRIBUTE
#	atts.ATTRIBUTEGROUP	attribute sublist: collects attributes, which 
#				belong together, in group ATTRIBUTEGROUP
#	attl.ELEMENT		attribute list: complete attribute list of
#				element ELEMENT
#	attle.ELEMENT		attribute list extension: extension point for
#				additonial project specific attributes of
#				element ELEMENT; is always empty string in
#				PI-Mod Core DTD modules
#	csp.			conditional section parameter: conditional 
#				section for ... (see below), which can be
#				enabled (INCLUDE) or disabled (IGNORE)
#	csp.el.ELEMENT		... element: element declaration and
#				corresponding attribute declration of Element
#				ELEMENT
#	csp.es.ENTITY-SET	... entity set: declaration and call of 
#				parameter entity of entity set ENTITY-SET
# 
# ****************************************************************************

# Copy from OASIS table module (needed for some XML parsers)

namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"

yesorno = xsd:NMTOKEN
# ********************* Attribute value enumerations ********************
attv.countries = string
attv.customerinterval = string
attv.datacustomer = string
attv.dataservice = string
attv.infoclass-1 = string
attv.langcode = string
attv.prodclass-1 = string
attv.serviceinterval = string
attv.specialintervals = string
attv.userinterface = string
# ******************** Single attribute declarations ********************
att.class =
  attribute class { "caution" | "danger" | "notice" | "warning" }
att.infoclass-1 = attribute infoclass-1 { attv.infoclass-1 }
att.nodeid = attribute nodeid { text }?
att.orient =
  [ a:defaultValue = "port" ] attribute orient { "port" | "land" }?
att.print = [ a:defaultValue = "yes" ] attribute print { "yes" | "no" }?
att.prodclass-1 = attribute prodclass-1 { attv.prodclass-1 }
att.translate =
  [ a:defaultValue = "yes" ] attribute translate { "yes" | "no" }?
att.valid = attribute valid { text }?
# ******************** Attribute sublist declarations *******************
atts.data =
  attribute customer { attv.datacustomer }?,
  attribute service { attv.dataservice }?
atts.module =
  attribute countrycode { attv.countries }?,
  attribute langcode { attv.langcode }?
atts.mediaobject =
  [ a:defaultValue = "original" ]
  attribute objectwidth {
    "original" | "textsize" | "fullpage" | "marginsize"
  }?,
  att.orient
atts.link = attribute linktotargetid { text }?
atts.classification = att.infoclass-1, att.prodclass-1
# ********************* Attribute list declarations *********************
attl.table =
  att.orient,
  attribute pgwide { yesorno }?,
  attribute tabstyle { text }?,
  [ a:defaultValue = "textsize" ]
  attribute tablewidth { "textsize" | "fullpage" | "original" }?,
  att.nodeid,
  att.translate,
  att.valid
attl.tgroup =
  attribute tgroupstyle { text }?,
  att.nodeid,
  att.translate
attl.thead = att.nodeid, att.translate
attl.tbody = att.nodeid, att.translate
attl.colspec = att.nodeid, att.translate
attl.row = att.nodeid, att.translate
attl.entry = att.nodeid, att.translate
# **** Declaration of attribut list extension point for OASIS table attributes ****
attle.table = empty
attle.tgroup = empty
attle.thead = empty
attle.tbody = empty
attle.colspec = empty
attle.row = empty
attle.entry = empty
# *************** End of DTD module "attribute-ents.ent" ****************
